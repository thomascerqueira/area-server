{
	"info": {
		"_postman_id": "63eb93f3-9613-4fae-a1c1-d2b7aa552250",
		"name": "Area",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "create user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"thomas_cerqduea@yahoo.fr\",\n    \"password\": \"1256\",\n    \"username\": \"alexis\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/createUser",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"createUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJodHRwczovL2lkZW50aXR5dG9vbGtpdC5nb29nbGVhcGlzLmNvbS9nb29nbGUuaWRlbnRpdHkuaWRlbnRpdHl0b29sa2l0LnYxLklkZW50aXR5VG9vbGtpdCIsImlhdCI6MTY0MjMzNzcxMSwiZXhwIjoxNjQyMzQxMzExLCJpc3MiOiJmaXJlYmFzZS1hZG1pbnNkay1veHBxeEBhcmVhLWUzZmMyLmlhbS5nc2VydmljZWFjY291bnQuY29tIiwic3ViIjoiZmlyZWJhc2UtYWRtaW5zZGstb3hwcXhAYXJlYS1lM2ZjMi5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsInVpZCI6ImgwWnI2SGdhMUFlRHNMblZ5Y0hrR0VVVTBMWDIifQ.wUl9VZeiwEz5Gq3CRp4Ah_z91Z6Xo4KSurvhipuzUALkP6cOcbW9SlpL8kZPa-WEQelGBKMNfvyk2Icmina6cX2yysdoD3GMGUqhB9JxmLzd3q80LgyZEX2pohkguLOI7_PI2WX6ZMV4a284JiYeJQi_BlyGpeveRe4r4oibzmDBTugAO04-4iCt05IHGkCw0U_jFgFNNLoyvKXOuB1BGFpzwISaikm42RCxBNC1YRFQGPw0o10PqquaRSPNZK_cj354P4z3tXoGp9eK7vTgP8bE6_YphQXnvAuJQWc8Awv2o3HsFmWV93CkPnkRh87CpL7yLql0DHkayR5EFCCWFA\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/deleteUser",
							"host": [
								"{{url}}"
							],
							"path": [
								"deleteUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "sign user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "tokenid",
								"value": "Bearer sdfdfdfd",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/signUser",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"signUser"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Services",
			"item": [
				{
					"name": "getAll",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/services/getAll",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"getAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Services",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "tokenid",
								"value": "Bearer",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/services/getUser",
							"host": [
								"{{url}}"
							],
							"path": [
								"services",
								"getUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Services",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/services",
							"host": [
								"{{url}}"
							],
							"path": [
								"services"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "MongoDb",
			"item": [
				{
					"name": "create collection",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"nameDB = pm.collectionVariables.get(\"nameDB\")",
									"nameCollection = pm.collectionVariables.get(\"nameCollection\")",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"db\": \"{{nameDB}}\",\n    \"name\": \"{{nameCollection}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5555/mongoDb/createCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5555",
							"path": [
								"mongoDb",
								"createCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete collection",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"testPostman\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5555/mongoDb/deleteCollection",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5555",
							"path": [
								"mongoDb",
								"deleteCollection"
							]
						}
					},
					"response": []
				},
				{
					"name": "add Doc",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"nameDB = pm.collectionVariables.get(\"nameDB\")",
									"nameCollection = pm.collectionVariables.get(\"nameCollection\")",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"db\": \"{{nameDB}}\",\n    \"collection\": \"{{nameCollection}}\",\n    \"doc\" : {\n        \"uid\": \"4545\",\n        \"name\": \"oula\",\n        \"value\": \"je suis chiant un peux\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5555/mongoDb/addDoc",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5555",
							"path": [
								"mongoDb",
								"addDoc"
							]
						}
					},
					"response": []
				},
				{
					"name": "get value",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"nameDB = pm.collectionVariables.get(\"nameDB\")",
									"nameCollection = pm.collectionVariables.get(\"nameCollection\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"db\": \"{{nameDB}}\",\n    \"collection\": \"{{nameCollection}}\",\n    \"doc\": {\n        \"uid\": \"4444\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5555/mongoDb/getValue",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5555",
							"path": [
								"mongoDb",
								"getValue"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.collectionVariables.set('nameDB', \"TestPostmanDB\")",
							"pm.collectionVariables.set('nameCollection', \"testPostman\")",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Action",
			"item": [
				{
					"name": "Github",
					"item": [
						{
							"name": "CreateGithub",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "tokenid",
										"value": "Bearer",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"NTM GITHUB\",\n    \"action\": {\n        \"service\": \"GitHub\",\n        \"actionName\": \"push\",\n        \"data\": {\n            \"token\": \"rien\",\n            \"githubName\": \"thomascerqueira\",\n            \"repository\": \"BatFPV\",\n            \"events\": \"push\"\n        }\n    },\n    \"reaction\": {\n        \"service\": \"email\",\n        \"reactionName\": \"send_mail\",\n        \"data\": {\n            \"email\": \"thomas.cerqueira@epitech.eu\",\n            \"object\": \"reaction\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/actions/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"actions",
										"create"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Survey",
					"item": [
						{
							"name": "Get Action Survey",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/actions/survey",
									"host": [
										"{{url}}"
									],
									"path": [
										"actions",
										"survey"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Survey Action",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "tokenid",
										"value": "Bearer ",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"B38R1uyf\",\n    \"value\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/actions/survey",
									"host": [
										"{{url}}"
									],
									"path": [
										"actions",
										"survey"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update All Survey Action",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{url}}/actions/survey/all",
									"host": [
										"{{url}}"
									],
									"path": [
										"actions",
										"survey",
										"all"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Covid",
					"item": [
						{
							"name": "CreateCovid",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "tokenid",
										"value": "Bearer ",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"test ToDelete\",\n    \"action\": {\n        \"service\": \"Covid\",\n        \"actionName\": \"covid\",\n        \"data\": {\n            \"country\": \"France\",\n            \"iso\": \"fra\",\n            \"value\": 0,\n            \"option\": \"greater\"\n        }\n    },\n    \"reaction\": {\n        \"service\": \"email\",\n        \"reactionName\": \"send_mail\",\n        \"data\": {\n            \"email\": \"thomas.cerqueira@epitech.eu\",\n            \"object\": \"reaction\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/actions/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"actions",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Test Covid",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"country\": \"France\",\n    \"iso\": \"fra\",\n    \"value\": 100000000,\n    \"option\": \"less\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/actions/testCovid",
									"host": [
										"{{url}}"
									],
									"path": [
										"actions",
										"testCovid"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "Delete Action",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "tokenid",
										"value": "Bearer ",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"7W02xDsM\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/actions",
									"host": [
										"{{url}}"
									],
									"path": [
										"actions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Forced",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ids\": [\"2qTx3J9U\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/actions/all",
									"host": [
										"{{url}}"
									],
									"path": [
										"actions",
										"all"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CreateWeatherTemp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "tokenid",
								"value": "Bearer ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"test Weather\",\n    \"action\": {\n        \"service\": \"Weather\",\n        \"actionName\": \"temperature\",\n        \"data\": {\n            \"city\": \"Paris\",\n            \"temperature\": 0,\n            \"option\": \"greater\"\n        }\n    },\n    \"reaction\": {\n        \"service\": \"email\",\n        \"reactionName\": \"send_mail\",\n        \"data\": {\n            \"email\": \"thomas.cerqueira@epitech.eu\",\n            \"object\": \"reaction\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/actions/create",
							"host": [
								"{{url}}"
							],
							"path": [
								"actions",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Discord",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "tokenid",
								"value": "Bearer ",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test Discord\",\n    \"action\": {\n        \"service\": \"Weather\",\n        \"actionName\": \"temperature\",\n        \"data\": {\n            \"city\": \"Paris\",\n            \"temperature\": 0,\n            \"option\": \"greater\"\n        }\n    },\n    \"reaction\": {\n        \"service\": \"Discord\",\n        \"reactionName\": \"sendMessage\",\n        \"data\": {\n            \"channel_id\": \"902157110480097352\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/actions/create",
							"host": [
								"{{url}}"
							],
							"path": [
								"actions",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/auth/test",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"test"
					]
				}
			},
			"response": []
		},
		{
			"name": "test up",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/",
					"host": [
						"{{url}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"try {",
					"    if (!pm.collectionVariables.get('url-dev').disabled) {",
					"        pm.globals.set('url', pm.collectionVariables.get('url-dev'))",
					"    }",
					"} catch (e) {",
					"    pm.globals.set('url', pm.collectionVariables.get('url-main'))",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "nameDB",
			"value": ""
		},
		{
			"key": "nameCollection",
			"value": ""
		},
		{
			"key": "url-dev",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"key": "url-main",
			"value": "",
			"type": "string"
		},
		{
			"key": "url-normal\n",
			"value": "",
			"type": "string"
		}
	]
}
